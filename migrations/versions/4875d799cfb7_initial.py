"""Initial

Revision ID: 4875d799cfb7
Revises: 
Create Date: 2023-12-30 00:22:23.256042

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4875d799cfb7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('developer',
    sa.Column('developer_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('developer_id')
    )
    op.create_table('payment',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.Column('registred_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('adcampaing',
    sa.Column('adcampaing_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('content_path', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('budget', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('adcampaing_id')
    )
    op.create_table('game',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('downloads', sa.Integer(), nullable=False),
    sa.Column('content_path', sa.String(), nullable=False),
    sa.Column('developer_id', sa.Integer(), nullable=True),
    sa.Column('type_app', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['developer_id'], ['developer.developer_id'], ),
    sa.PrimaryKeyConstraint('game_id')
    )
    op.create_table('paymentuser',
    sa.Column('paymentuser_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payment.payment_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('paymentuser_id')
    )
    op.create_table('adcampainggame',
    sa.Column('adcampainggame_id', sa.Integer(), nullable=False),
    sa.Column('adcampaing_id', sa.Integer(), nullable=True),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['adcampaing_id'], ['adcampaing.adcampaing_id'], ),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ),
    sa.PrimaryKeyConstraint('adcampainggame_id')
    )
    op.create_table('adcampainggamemetric',
    sa.Column('adcampainggamemetric_id', sa.Integer(), nullable=False),
    sa.Column('adcampaing_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('cpm', sa.Float(), nullable=False),
    sa.Column('ctr', sa.Float(), nullable=False),
    sa.Column('cpc', sa.Float(), nullable=False),
    sa.Column('cr', sa.Float(), nullable=False),
    sa.Column('cpa', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['adcampaing_id'], ['adcampaing.adcampaing_id'], ),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('adcampainggamemetric_id')
    )
    op.create_table('blacklistusergame',
    sa.Column('blacklist_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('blacklist_id')
    )
    op.create_table('developergame',
    sa.Column('developergame_id', sa.Integer(), nullable=False),
    sa.Column('developer_id', sa.Integer(), nullable=True),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['developer_id'], ['developer.developer_id'], ),
    sa.ForeignKeyConstraint(['game_id'], ['game.game_id'], ),
    sa.PrimaryKeyConstraint('developergame_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('developergame')
    op.drop_table('blacklistusergame')
    op.drop_table('adcampainggamemetric')
    op.drop_table('adcampainggame')
    op.drop_table('paymentuser')
    op.drop_table('game')
    op.drop_table('adcampaing')
    op.drop_table('user')
    op.drop_table('payment')
    op.drop_table('developer')
    # ### end Alembic commands ###
